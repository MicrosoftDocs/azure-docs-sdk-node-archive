### YamlMime:TSType
name: RetryPolicyFilter
uid: azure-storage.export=.common.filters.retrypolicyfilter.RetryPolicyFilter
package: azure-storage
summary: ''
fullName: RetryPolicyFilter
remarks: ''
isDeprecated: false
type: interface
properties:
  - name: retryCount
    uid: >-
      azure-storage.export=.common.filters.retrypolicyfilter.RetryPolicyFilter.retryCount
    package: azure-storage
    summary: ''
    fullName: retryCount
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'retryCount: number'
      return:
        description: ''
        type: number
  - name: retryInterval
    uid: >-
      azure-storage.export=.common.filters.retrypolicyfilter.RetryPolicyFilter.retryInterval
    package: azure-storage
    summary: ''
    fullName: retryInterval
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'retryInterval: number'
      return:
        description: ''
        type: number
inheritedMethods:
  - name: handle(RequestOptions, Next)
    uid: >-
      azure-storage.export=.common.filters.retrypolicyfilter.RetryPolicyFilter.handle
    package: azure-storage
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function handle(requestOptions: RequestOptions, next: Next)'
      parameters:
        - id: requestOptions
          type: >-
            <xref uid="azure-storage.export" />=.<xref
            uid="common.RequestOptions" />
          description: ''
        - id: next
          type: >-
            <xref uid="azure-storage.export" />=.<xref uid="common.filters.Next"
            />
          description: ''
    inheritanceDescription: >-
      <b>Inherited From</b>
      [IRetryPolicy.handle](xref:azure-storage.export=.common.filters.retrypolicyfilter.RetryPolicyFilter.IRetryPolicy.handle)
methods:
  - name: constructor(number, number)
    uid: >-
      azure-storage.export=.common.filters.retrypolicyfilter.RetryPolicyFilter.constructor
    package: azure-storage
    summary: |+
      Creates a new RetryPolicyFilter instance.

      **Example**

      ```ts
      var azure = require('azure-storage');
      var retryPolicy = new azure.RetryPolicyFilter();
      retryPolicy.retryCount = 3;
      retryPolicy.retryInterval = 3000;
      retryPolicy.shouldRetry = function(statusCode, retryRequestOption) {

      };
      var blobService = azure.createBlobService().withFilter(retryPolicy);
      ```

    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function constructor(retryCount?: number, retryInterval?: number):
        RetryPolicyFilter
      parameters:
        - id: retryCount
          type: number
          description: The client retry count.
        - id: retryInterval
          type: number
          description: The client retry interval, in milliseconds.
      return:
        description: ''
        type: >-
          <xref uid="azure-storage.export" />=.<xref
          uid="common.filters.retrypolicyfilter.RetryPolicyFilter" />
  - name: shouldRetry(number, IRetryRequestOptions)
    uid: >-
      azure-storage.export=.common.filters.retrypolicyfilter.RetryPolicyFilter.shouldRetry
    package: azure-storage
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function shouldRetry(statusCode: number, retryData:
        IRetryRequestOptions): { retryInterval: number, retryable: boolean }
      parameters:
        - id: statusCode
          type: number
          description: ''
        - id: retryData
          type: >-
            <xref uid="azure-storage.export" />=.<xref
            uid="common.filters.retrypolicyfilter.RetryPolicyFilter.IRetryRequestOptions"
            />
          description: ''
      return:
        description: ''
        type: '{ retryInterval: number, retryable: boolean }'
extends: >-
  <xref uid="azure-storage.export" />=.<xref
  uid="common.filters.retrypolicyfilter.RetryPolicyFilter.IRetryPolicy" />
