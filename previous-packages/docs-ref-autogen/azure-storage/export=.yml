### YamlMime:TSPackage
uid: azure-storage.export=
name: export=
summary: ''
type: module
interfaces:
  - azure-storage.export=.AccessConditions
  - azure-storage.export=.ErrorOrResponse
  - azure-storage.export=.ErrorOrResult
  - azure-storage.export=.ServiceResponse
  - azure-storage.export=.ServiceResult
  - azure-storage.export=.StorageError
  - azure-storage.export=.StorageHost
package: azure-storage
functions:
  - name: createBlobService()
    uid: azure-storage.export=.createBlobService_2
    package: azure-storage
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function createBlobService(): BlobService'
      return:
        description: ''
        type: >-
          <xref uid="azure-storage.export" />=.<xref
          uid="services.blob.blobservice.BlobService" />
  - name: createBlobService(string)
    uid: azure-storage.export=.createBlobService_1
    package: azure-storage
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function createBlobService(connectionString: string): BlobService'
      parameters:
        - id: connectionString
          type: string
          description: ''
      return:
        description: ''
        type: >-
          <xref uid="azure-storage.export" />=.<xref
          uid="services.blob.blobservice.BlobService" />
  - name: createBlobService(string, string, string | StorageHost)
    uid: azure-storage.export=.createBlobService
    package: azure-storage
    summary: >-
      Creates a new
      [BlobService](xref:azure-storage.export=.services.blob.blobservice.BlobService)
      object.

      If no storageaccount or storageaccesskey are provided, the
      AZURE_STORAGE_CONNECTION_STRING and then the AZURE_STORAGE_ACCOUNT and
      AZURE_STORAGE_ACCESS_KEY

      environment variables will be used.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function createBlobService(storageAccount: string, storageAccessKey?:
        string, host?: string | StorageHost): BlobService
      parameters:
        - id: storageAccount
          type: string
          description: ''
        - id: storageAccessKey
          type: string
          description: The storage access key.
        - id: host
          type: string | <xref uid="azure-storage.export" />=.StorageHost
          description: |-
            The host address. To define primary only, pass a string.
                                                                Otherwise 'host.primaryHost' defines the primary host and 'host.secondaryHost' defines the secondary host.
      return:
        description: A new BlobService object.
        type: >-
          <xref uid="azure-storage.export" />=.<xref
          uid="services.blob.blobservice.BlobService" />
  - name: createBlobServiceAnonymous(string | StorageHost)
    uid: azure-storage.export=.createBlobServiceAnonymous
    package: azure-storage
    summary: >-
      Creates a new
      [BlobService](xref:azure-storage.export=.services.blob.blobservice.BlobService)
      object using the host uri and anonymous access.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function createBlobServiceAnonymous(host?: string | StorageHost):
        BlobService
      parameters:
        - id: host
          type: string | <xref uid="azure-storage.export" />=.StorageHost
          description: |-
            The host address. To define primary only, pass a string.
                                                                Otherwise 'host.primaryHost' defines the primary host and 'host.secondaryHost' defines the secondary host.
      return:
        description: A new BlobService object with the anonymous credentials.
        type: >-
          <xref uid="azure-storage.export" />=.<xref
          uid="services.blob.blobservice.BlobService" />
  - name: createBlobServiceWithSas(string | StorageHost, string)
    uid: azure-storage.export=.createBlobServiceWithSas
    package: azure-storage
    summary: >-
      Creates a new
      [BlobService](xref:azure-storage.export=.services.blob.blobservice.BlobService)
      object using the host Uri and the SAS credentials provided.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function createBlobServiceWithSas(host: string | StorageHost, sasToken:
        string): BlobService
      parameters:
        - id: host
          type: string | <xref uid="azure-storage.export" />=.StorageHost
          description: |-
            The host address. To define primary only, pass a string.
                                                                Otherwise 'host.primaryHost' defines the primary host and 'host.secondaryHost' defines the secondary host.
        - id: sasToken
          type: string
          description: The Shared Access Signature token.
      return:
        description: A new BlobService object with the SAS credentials.
        type: >-
          <xref uid="azure-storage.export" />=.<xref
          uid="services.blob.blobservice.BlobService" />
  - name: >-
      createBlobServiceWithTokenCredential(string | StorageHost,
      TokenCredential)
    uid: azure-storage.export=.createBlobServiceWithTokenCredential
    package: azure-storage
    summary: >+
      Creates a new
      [BlobService](xref:azure-storage.export=.services.blob.blobservice.BlobService)
      object using the host Uri and the
      [TokenCredential](xref:azure-storage.export=.common.models.tokenCredential.TokenCredential)
      provided, which supports OAuth.


      **Example**


      ```ts

      var azure = require('azure-storage');

      var tokenCredential = new azure.TokenCredential('myOAuthAccessToken');

      var blobService =
      azure.createBlobServiceWithTokenCredential('https://account.blob.core.windows.net',
      tokenCredential);

      tokenCredential.set('updatedOAuthAccessToken');

      ```

    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function createBlobServiceWithTokenCredential(host: string |
        StorageHost, token: TokenCredential): BlobService
      parameters:
        - id: host
          type: string | <xref uid="azure-storage.export" />=.StorageHost
          description: |-
            The host address. To define primary only, pass a string. 
                                                                Otherwise 'host.primaryHost' defines the primary host and 'host.secondaryHost' defines the secondary host.
        - id: token
          type: >-
            <xref uid="azure-storage.export" />=.<xref
            uid="common.models.tokenCredential.TokenCredential" />
          description: The TokenCredential object.
      return:
        description: >-
          A new BlobService object with the
          [TokenCredential](xref:azure-storage.export=.common.models.tokenCredential.TokenCredential)
          credentials.
        type: >-
          <xref uid="azure-storage.export" />=.<xref
          uid="services.blob.blobservice.BlobService" />
  - name: createFileService()
    uid: azure-storage.export=.createFileService_2
    package: azure-storage
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function createFileService(): FileService'
      return:
        description: ''
        type: FileService
  - name: createFileService(string)
    uid: azure-storage.export=.createFileService_1
    package: azure-storage
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function createFileService(connectionString: string): FileService'
      parameters:
        - id: connectionString
          type: string
          description: ''
      return:
        description: ''
        type: FileService
  - name: createFileService(string, string, string | StorageHost)
    uid: azure-storage.export=.createFileService
    package: azure-storage
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function createFileService(storageAccount: string, storageAccessKey:
        string, host?: string | StorageHost): FileService
      parameters:
        - id: storageAccount
          type: string
          description: ''
        - id: storageAccessKey
          type: string
          description: ''
        - id: host
          type: string | <xref uid="azure-storage.export" />=.StorageHost
          description: ''
      return:
        description: ''
        type: FileService
  - name: createFileServiceWithSas(string | StorageHost, string)
    uid: azure-storage.export=.createFileServiceWithSas
    package: azure-storage
    summary: >-
      Creates a new [FileService](xref:4559) object using the host Uri and the
      SAS credentials provided.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function createFileServiceWithSas(hostUri: string | StorageHost,
        sasToken: string): FileService
      parameters:
        - id: hostUri
          type: string | <xref uid="azure-storage.export" />=.StorageHost
          description: ''
        - id: sasToken
          type: string
          description: The Shared Access Signature token.
      return:
        description: A new FileService object with the SAS credentials.
        type: FileService
  - name: createQueueService()
    uid: azure-storage.export=.createQueueService_2
    package: azure-storage
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function createQueueService(): QueueService'
      return:
        description: ''
        type: >-
          <xref uid="azure-storage.export" />=.<xref
          uid="services.queue.QueueService" />
  - name: createQueueService(string)
    uid: azure-storage.export=.createQueueService_1
    package: azure-storage
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function createQueueService(connectionString: string): QueueService'
      parameters:
        - id: connectionString
          type: string
          description: ''
      return:
        description: ''
        type: >-
          <xref uid="azure-storage.export" />=.<xref
          uid="services.queue.QueueService" />
  - name: createQueueService(string, string, string | StorageHost)
    uid: azure-storage.export=.createQueueService
    package: azure-storage
    summary: >-
      Creates a new
      [QueueService](xref:azure-storage.export=.services.queue.QueueService)
      object.

      If no storageaccount or storageaccesskey are provided, the
      AZURE_STORAGE_CONNECTION_STRING and then the AZURE_STORAGE_ACCOUNT and
      AZURE_STORAGE_ACCESS_KEY

      environment variables will be used.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function createQueueService(storageAccount: string, storageAccessKey?:
        string, host?: string | StorageHost): QueueService
      parameters:
        - id: storageAccount
          type: string
          description: ''
        - id: storageAccessKey
          type: string
          description: The storage access key.
        - id: host
          type: string | <xref uid="azure-storage.export" />=.StorageHost
          description: |-
            The host address. To define primary only, pass a string.
                                                                Otherwise 'host.primaryHost' defines the primary host and 'host.secondaryHost' defines the secondary host.
      return:
        description: A new QueueService object.
        type: >-
          <xref uid="azure-storage.export" />=.<xref
          uid="services.queue.QueueService" />
  - name: createQueueServiceWithSas(string | StorageHost, string)
    uid: azure-storage.export=.createQueueServiceWithSas
    package: azure-storage
    summary: >-
      Creates a new
      [QueueService](xref:azure-storage.export=.services.queue.QueueService)
      object using the host Uri and the SAS credentials provided.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function createQueueServiceWithSas(host: string | StorageHost, sasToken:
        string): QueueService
      parameters:
        - id: host
          type: string | <xref uid="azure-storage.export" />=.StorageHost
          description: |-
            The host address. To define primary only, pass a string.
                                                                Otherwise 'host.primaryHost' defines the primary host and 'host.secondaryHost' defines the secondary host.
        - id: sasToken
          type: string
          description: The Shared Access Signature token.
      return:
        description: A new QueueService object with the SAS credentials.
        type: >-
          <xref uid="azure-storage.export" />=.<xref
          uid="services.queue.QueueService" />
  - name: >-
      createQueueServiceWithTokenCredential(string | StorageHost,
      TokenCredential)
    uid: azure-storage.export=.createQueueServiceWithTokenCredential
    package: azure-storage
    summary: >+
      Creates a new
      [QueueService](xref:azure-storage.export=.services.queue.QueueService)
      object using the host Uri and the
      [TokenCredential](xref:azure-storage.export=.common.models.tokenCredential.TokenCredential)
      provided, which supports OAuth.


      **Example**


      ```ts

      var azure = require('azure-storage');

      var tokenCredential = new azure.TokenCredential('myOAuthAccessToken');

      var queueService =
      azure.createQueueServiceWithTokenCredential('https://account.queue.core.windows.net',
      tokenCredential);

      tokenCredential.set('updatedOAuthAccessToken');

      ```

    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function createQueueServiceWithTokenCredential(host: string |
        StorageHost, token: TokenCredential): QueueService
      parameters:
        - id: host
          type: string | <xref uid="azure-storage.export" />=.StorageHost
          description: |-
            The host address. To define primary only, pass a string. 
                                                                Otherwise 'host.primaryHost' defines the primary host and 'host.secondaryHost' defines the secondary host.
        - id: token
          type: >-
            <xref uid="azure-storage.export" />=.<xref
            uid="common.models.tokenCredential.TokenCredential" />
          description: The TokenCredential object.
      return:
        description: >-
          A new QueueService object with the
          [TokenCredential](xref:azure-storage.export=.common.models.tokenCredential.TokenCredential)
          object.
        type: >-
          <xref uid="azure-storage.export" />=.<xref
          uid="services.queue.QueueService" />
  - name: createTableService()
    uid: azure-storage.export=.createTableService
    package: azure-storage
    summary: >-
      Creates a new [TableService](xref:4553) object.

      If no storageaccount or storageaccesskey are provided, the
      AZURE_STORAGE_CONNECTION_STRING and then the AZURE_STORAGE_ACCOUNT and
      AZURE_STORAGE_ACCESS_KEY

      environment variables will be used.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function createTableService(): TableService'
      return:
        description: A new TableService object.
        type: TableService
  - name: createTableService(string)
    uid: azure-storage.export=.createTableService_1
    package: azure-storage
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function createTableService(connectionString: string): TableService'
      parameters:
        - id: connectionString
          type: string
          description: ''
      return:
        description: ''
        type: TableService
  - name: createTableService(string, string, StorageHost)
    uid: azure-storage.export=.createTableService_2
    package: azure-storage
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function createTableService(storageAccountOrConnectionString: string,
        storageAccessKey: string, host?: StorageHost): TableService
      parameters:
        - id: storageAccountOrConnectionString
          type: string
          description: ''
        - id: storageAccessKey
          type: string
          description: ''
        - id: host
          type: <xref uid="azure-storage.export" />=.StorageHost
          description: ''
      return:
        description: ''
        type: TableService
  - name: createTableServiceWithSas(string | StorageHost, string)
    uid: azure-storage.export=.createTableServiceWithSas
    package: azure-storage
    summary: >-
      Creates a new [TableService](xref:4553) object using the host Uri and the
      SAS credentials provided.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function createTableServiceWithSas(hostUri: string | StorageHost,
        sasToken: string): TableService
      parameters:
        - id: hostUri
          type: string | <xref uid="azure-storage.export" />=.StorageHost
          description: ''
        - id: sasToken
          type: string
          description: The Shared Access Signature token.
      return:
        description: A new TableService object with the SAS credentials.
        type: TableService
  - name: generateAccountSharedAccessSignature(string, string, SharedAccessPolicy)
    uid: azure-storage.export=.generateAccountSharedAccessSignature
    package: azure-storage
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function
        generateAccountSharedAccessSignature(storageAccountOrConnectionString:
        string, storageAccessKey: string, sharedAccessAccountPolicy:
        SharedAccessPolicy): string
      parameters:
        - id: storageAccountOrConnectionString
          type: string
          description: ''
        - id: storageAccessKey
          type: string
          description: ''
        - id: sharedAccessAccountPolicy
          type: >-
            <xref uid="azure-storage.export" />=.<xref
            uid="common.SharedAccessPolicy" />
          description: ''
      return:
        description: ''
        type: string
  - name: generateDevelopmentStorageCredentials(string)
    uid: azure-storage.export=.generateDevelopmentStorageCredentials
    package: azure-storage
    summary: >+
      Creates a connection string that can be used to create a service which
      runs on the storage emulator. The emulator must be downloaded separately.


      **Example**


      ```ts

      var azure = require('azure-storage');

      var devStoreCreds = azure.generateDevelopmentStorageCredentials();

      var blobService = azure.createBlobService(devStoreCreds);

      ```

    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function generateDevelopmentStorageCredentials(proxyUri?: string):
        string
      parameters:
        - id: proxyUri
          type: string
          description: The proxyUri. By default, http://127.0.0.1
      return:
        description: A connection string representing the development storage credentials.
        type: string
