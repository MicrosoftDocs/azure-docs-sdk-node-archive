### YamlMime:TSType
name: KeyVaultCredentials
uid: azure-keyvault.KeyVaultCredentials
package: azure-keyvault
summary: An object that performs authentication for Key Vault.
fullName: KeyVaultCredentials
remarks: ''
isDeprecated: false
type: class
constructors:
  - name: 'KeyVaultCredentials((challenge: object, callback: any) => any, object)'
    uid: azure-keyvault.KeyVaultCredentials.constructor
    package: azure-keyvault
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        new KeyVaultCredentials(authenticator: (challenge: object, callback:
        any) => any, credentials: object)
      parameters:
        - id: authenticator
          type: '(challenge: object, callback: any) =&gt; any'
          description: ''
        - id: credentials
          type: object
          description: ''
methods:
  - name: addChallengeToCache(WebResource, object)
    uid: azure-keyvault.KeyVaultCredentials.addChallengeToCache
    package: azure-keyvault
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function addChallengeToCache(webResource: WebResource, challenge:
        object)
      parameters:
        - id: webResource
          type: WebResource
          description: ''
        - id: challenge
          type: object
          description: ''
  - name: createSigningFilter()
    uid: azure-keyvault.KeyVaultCredentials.createSigningFilter
    package: azure-keyvault
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function createSigningFilter(): (resource: WebResource, next: Function,
        callback: ServiceCallback<any>) => any
      return:
        description: ''
        type: >-
          (resource: WebResource, next: Function, callback:
          ServiceCallback&lt;any&gt;) =&gt; any
  - name: getCachedChallenge(WebResource)
    uid: azure-keyvault.KeyVaultCredentials.getCachedChallenge
    package: azure-keyvault
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function getCachedChallenge(webResource: WebResource): object'
      parameters:
        - id: webResource
          type: WebResource
          description: ''
      return:
        description: ''
        type: object
  - name: >-
      handleUnauthorized(WebResource, Function, Error, object, any,
      ServiceCallback<any>)
    uid: azure-keyvault.KeyVaultCredentials.handleUnauthorized
    package: azure-keyvault
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function handleUnauthorized(webResource: WebResource, next: Function,
        err: Error, response: object, body: any, callback:
        ServiceCallback<any>): any
      parameters:
        - id: webResource
          type: WebResource
          description: ''
        - id: next
          type: Function
          description: ''
        - id: err
          type: Error
          description: ''
        - id: response
          type: object
          description: ''
        - id: body
          type: any
          description: ''
        - id: callback
          type: ServiceCallback&lt;any&gt;
          description: ''
      return:
        description: ''
        type: any
  - name: 'signRequest(WebResource, (err: Error) => void)'
    uid: azure-keyvault.KeyVaultCredentials.signRequest
    package: azure-keyvault
    summary: Signs a request with the Authentication header.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function signRequest(webResource: WebResource, callback: (err: Error) =>
        void)
      parameters:
        - id: webResource
          type: WebResource
          description: ''
        - id: callback
          type: '(err: Error) =&gt; void'
          description: The callback function.
