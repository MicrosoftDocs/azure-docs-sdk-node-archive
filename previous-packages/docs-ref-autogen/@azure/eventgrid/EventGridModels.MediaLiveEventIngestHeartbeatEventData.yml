### YamlMime:TSType
name: MediaLiveEventIngestHeartbeatEventData
uid: '@azure/eventgrid.EventGridModels.MediaLiveEventIngestHeartbeatEventData'
package: '@azure/eventgrid'
summary: Ingest fragment dropped event data.
fullName: MediaLiveEventIngestHeartbeatEventData
remarks: ''
isDeprecated: false
type: interface
properties:
  - name: bitrate
    uid: >-
      @azure/eventgrid.EventGridModels.MediaLiveEventIngestHeartbeatEventData.bitrate
    package: '@azure/eventgrid'
    summary: >-
      Gets the bitrate of the track.

      **NOTE: This property will not be serialized. It can only be populated by
      the server.**
    fullName: bitrate
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'bitrate?: number'
      return:
        description: ''
        type: number
  - name: discontinuityCount
    uid: >-
      @azure/eventgrid.EventGridModels.MediaLiveEventIngestHeartbeatEventData.discontinuityCount
    package: '@azure/eventgrid'
    summary: >-
      Gets the fragment Discontinuity count.

      **NOTE: This property will not be serialized. It can only be populated by
      the server.**
    fullName: discontinuityCount
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'discontinuityCount?: number'
      return:
        description: ''
        type: number
  - name: healthy
    uid: >-
      @azure/eventgrid.EventGridModels.MediaLiveEventIngestHeartbeatEventData.healthy
    package: '@azure/eventgrid'
    summary: >-
      Gets a value indicating whether preview is healthy or not.

      **NOTE: This property will not be serialized. It can only be populated by
      the server.**
    fullName: healthy
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'healthy?: boolean'
      return:
        description: ''
        type: boolean
  - name: incomingBitrate
    uid: >-
      @azure/eventgrid.EventGridModels.MediaLiveEventIngestHeartbeatEventData.incomingBitrate
    package: '@azure/eventgrid'
    summary: >-
      Gets the incoming bitrate.

      **NOTE: This property will not be serialized. It can only be populated by
      the server.**
    fullName: incomingBitrate
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'incomingBitrate?: number'
      return:
        description: ''
        type: number
  - name: lastTimestamp
    uid: >-
      @azure/eventgrid.EventGridModels.MediaLiveEventIngestHeartbeatEventData.lastTimestamp
    package: '@azure/eventgrid'
    summary: >-
      Gets the last timestamp.

      **NOTE: This property will not be serialized. It can only be populated by
      the server.**
    fullName: lastTimestamp
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'lastTimestamp?: string'
      return:
        description: ''
        type: string
  - name: nonincreasingCount
    uid: >-
      @azure/eventgrid.EventGridModels.MediaLiveEventIngestHeartbeatEventData.nonincreasingCount
    package: '@azure/eventgrid'
    summary: >-
      Gets Non increasing count.

      **NOTE: This property will not be serialized. It can only be populated by
      the server.**
    fullName: nonincreasingCount
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'nonincreasingCount?: number'
      return:
        description: ''
        type: number
  - name: overlapCount
    uid: >-
      @azure/eventgrid.EventGridModels.MediaLiveEventIngestHeartbeatEventData.overlapCount
    package: '@azure/eventgrid'
    summary: >-
      Gets the fragment Overlap count.

      **NOTE: This property will not be serialized. It can only be populated by
      the server.**
    fullName: overlapCount
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'overlapCount?: number'
      return:
        description: ''
        type: number
  - name: state
    uid: >-
      @azure/eventgrid.EventGridModels.MediaLiveEventIngestHeartbeatEventData.state
    package: '@azure/eventgrid'
    summary: >-
      Gets the state of the live event.

      **NOTE: This property will not be serialized. It can only be populated by
      the server.**
    fullName: state
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'state?: string'
      return:
        description: ''
        type: string
  - name: timescale
    uid: >-
      @azure/eventgrid.EventGridModels.MediaLiveEventIngestHeartbeatEventData.timescale
    package: '@azure/eventgrid'
    summary: >-
      Gets the timescale of the last timestamp.

      **NOTE: This property will not be serialized. It can only be populated by
      the server.**
    fullName: timescale
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'timescale?: string'
      return:
        description: ''
        type: string
  - name: trackName
    uid: >-
      @azure/eventgrid.EventGridModels.MediaLiveEventIngestHeartbeatEventData.trackName
    package: '@azure/eventgrid'
    summary: >-
      Gets the track name.

      **NOTE: This property will not be serialized. It can only be populated by
      the server.**
    fullName: trackName
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'trackName?: string'
      return:
        description: ''
        type: string
  - name: trackType
    uid: >-
      @azure/eventgrid.EventGridModels.MediaLiveEventIngestHeartbeatEventData.trackType
    package: '@azure/eventgrid'
    summary: >-
      Gets the type of the track (Audio / Video).

      **NOTE: This property will not be serialized. It can only be populated by
      the server.**
    fullName: trackType
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'trackType?: string'
      return:
        description: ''
        type: string
  - name: unexpectedBitrate
    uid: >-
      @azure/eventgrid.EventGridModels.MediaLiveEventIngestHeartbeatEventData.unexpectedBitrate
    package: '@azure/eventgrid'
    summary: >-
      Gets a value indicating whether unexpected bitrate is present or not.

      **NOTE: This property will not be serialized. It can only be populated by
      the server.**
    fullName: unexpectedBitrate
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'unexpectedBitrate?: boolean'
      return:
        description: ''
        type: boolean
