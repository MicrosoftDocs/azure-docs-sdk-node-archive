### YamlMime:TSType
name: ServiceURL
uid: '@azure/storage-file.ServiceURL'
package: '@azure/storage-file'
summary: |-
  A ServiceURL represents a URL to the Azure Storage File service allowing you
  to manipulate file shares.
fullName: ServiceURL
remarks: ''
isDeprecated: false
type: class
constructors:
  - name: ServiceURL(string, Pipeline)
    uid: '@azure/storage-file.ServiceURL.constructor'
    package: '@azure/storage-file'
    summary: Creates an instance of ServiceURL.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'new ServiceURL(url: string, pipeline: Pipeline)'
      parameters:
        - id: url
          type: string
          description: |-
            A URL string pointing to Azure Storage file service, such as
                                "https://myaccount.file.core.windows.net". You can Append a SAS
                                if using AnonymousCredential, such as "https://myaccount.file.core.windows.net?sasString".
        - id: pipeline
          type: <xref uid="@azure/storage-file.Pipeline" />
          description: |-
            Call StorageURL.newPipeline() to create a default
                                       pipeline, or provide a customized pipeline.
inheritedProperties:
  - name: url
    uid: '@azure/storage-file.ServiceURL.url'
    package: '@azure/storage-file'
    summary: URL string value.
    fullName: url
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'url: string'
      return:
        description: ''
        type: string
    inheritanceDescription: >-
      <b>Inherited From</b>
      [StorageURL.url](xref:@azure/storage-file.StorageURL.url)
inheritedMethods:
  - name: newPipeline(Credential, INewPipelineOptions)
    uid: '@azure/storage-file.ServiceURL.newPipeline'
    package: '@azure/storage-file'
    summary: >-
      A static method used to create a new Pipeline object with Credential
      provided.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        static function newPipeline(credential: Credential, pipelineOptions?:
        INewPipelineOptions): Pipeline
      parameters:
        - id: credential
          type: <xref uid="@azure/storage-file.Credential" />
          description: Such as AnonymousCredential, SharedKeyCredential.
        - id: pipelineOptions
          type: <xref uid="@azure/storage-file.INewPipelineOptions" />
          description: Optional. Options.
      return:
        description: A new Pipeline object.
        type: <xref uid="@azure/storage-file.Pipeline" />
    inheritanceDescription: >-
      <b>Inherited From</b>
      [StorageURL.newPipeline](xref:@azure/storage-file.StorageURL.newPipeline)
methods:
  - name: getProperties(Aborter)
    uid: '@azure/storage-file.ServiceURL.getProperties'
    package: '@azure/storage-file'
    summary: >-
      Gets the properties of a storage account’s file service, including
      properties

      for Storage Analytics and CORS (Cross-Origin Resource Sharing) rules.


      See
      https://docs.microsoft.com/en-us/rest/api/storageservices/get-file-service-properties}
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getProperties(aborter: Aborter):
        Promise<ServiceGetPropertiesResponse>
      parameters:
        - id: aborter
          type: <xref uid="@azure/storage-file.Aborter" />
          description: >-
            Create a new Aborter instance with Aborter.none or
            Aborter.timeout(),
                                     goto documents of Aborter for more examples about request cancellation
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/storage-file.Models.ServiceGetPropertiesResponse" />&gt;
  - name: listSharesSegment(Aborter, string, IServiceListSharesSegmentOptions)
    uid: '@azure/storage-file.ServiceURL.listSharesSegment'
    package: '@azure/storage-file'
    summary: >-
      Gets the properties of a storage account's File service, including
      properties for Storage

      Analytics metrics and CORS (Cross-Origin Resource Sharing) rules.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listSharesSegment(aborter: Aborter, marker?: string, options?:
        IServiceListSharesSegmentOptions):
        Promise<ServiceListSharesSegmentResponse>
      parameters:
        - id: aborter
          type: <xref uid="@azure/storage-file.Aborter" />
          description: >-
            Create a new Aborter instance with Aborter.none or
            Aborter.timeout(),
                                     goto documents of Aborter for more examples about request cancellation
        - id: marker
          type: string
          description: |-
            A string value that identifies the portion of
                                     the list to be returned with the next list operation. The operation
                                     returns a marker value within the response body if the list returned was
                                     not complete. The marker value may then be used in a subsequent call to
                                     request the next set of list items. The marker value is opaque to the
                                     client.
        - id: options
          type: <xref uid="@azure/storage-file.IServiceListSharesSegmentOptions" />
          description: ''
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/storage-file.Models.ServiceListSharesSegmentResponse"
          />&gt;
  - name: setProperties(Aborter, StorageServiceProperties)
    uid: '@azure/storage-file.ServiceURL.setProperties'
    package: '@azure/storage-file'
    summary: >-
      Sets properties for a storage account’s file service endpoint, including
      properties

      for Storage Analytics, CORS (Cross-Origin Resource Sharing) rules and soft
      delete settings.


      See
      https://docs.microsoft.com/en-us/rest/api/storageservices/set-file-service-properties}
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function setProperties(aborter: Aborter, properties:
        StorageServiceProperties): Promise<ServiceSetPropertiesResponse>
      parameters:
        - id: aborter
          type: <xref uid="@azure/storage-file.Aborter" />
          description: >-
            Create a new Aborter instance with Aborter.none or
            Aborter.timeout(),
                                     goto documents of Aborter for more examples about request cancellation
        - id: properties
          type: <xref uid="@azure/storage-file.Models.StorageServiceProperties" />
          description: ''
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/storage-file.Models.ServiceSetPropertiesResponse" />&gt;
  - name: withPipeline(Pipeline)
    uid: '@azure/storage-file.ServiceURL.withPipeline'
    package: '@azure/storage-file'
    summary: |-
      Creates a new ServiceURL object identical to the source but with the
      specified request policy pipeline.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function withPipeline(pipeline: Pipeline): ServiceURL'
      parameters:
        - id: pipeline
          type: <xref uid="@azure/storage-file.Pipeline" />
          description: ''
      return:
        description: ''
        type: <xref uid="@azure/storage-file.ServiceURL" />
extends: <xref uid="@azure/storage-file.StorageURL" />
